package gui.MainFrame;

// Import c√°c Panel c·∫ßn hi·ªÉn th·ªã
import gui.Panel.*;
import gui.Panel.ManHinhDashboardQuanLy;
// import gui.Panel.ManHinhDashboardQuanLy; // Gi·∫£ s·ª≠ ƒë√¢y l√† Trang Ch·ªß

import javax.swing.*;
import javax.swing.border.EmptyBorder;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.HashMap;
import java.util.Map;

/**
 * L·ªõp n√†y t·∫°o MainFrame cho quy·ªÅn Qu·∫£n L√Ω, ch·ª©a Menu c·ªë ƒë·ªãnh v√† CardLayout ƒë·ªÉ chuy·ªÉn m√†n h√¨nh.
 */
public class QuanLyDashboard extends JFrame implements ActionListener {

    // =================================================================================
    // H·∫∞NG S·ªê V√Ä KHAI B√ÅO
    // =================================================================================
    private CardLayout cardLayout;
    private JPanel contentPanel;
    private JPanel navPanel;
    private final Color PRIMARY_COLOR = new Color(0, 120, 215);
    private final Color SELECTED_COLOR = new Color(0, 51, 102);
    private final Color HOVER_COLOR = new Color(0, 130, 235);
    private final Map<String, JButton> menuButtons = new HashMap<>();

    // C√°c n√∫t menu c·∫ßn qu·∫£n l√Ω
    private JButton btnTrangChu, btnQLChuyenTau, btnQLNV, btnQLKhuyenMai, btnDangXuat;

    public QuanLyDashboard() {
        setTitle("H·ªá th·ªëng Qu·∫£n l√Ω V√© T√†u");
        setSize(1400, 900);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
        setLayout(new BorderLayout());

        // 1. Panel Menu b√™n tr√°i
        navPanel = createNavPanel();
        add(navPanel, BorderLayout.WEST);

        // 2. Panel n·ªôi dung (CardLayout)
        initContentPanel();
        setExtendedState(JFrame.MAXIMIZED_BOTH);


        // M·∫∑c ƒë·ªãnh hi·ªÉn th·ªã m√†n h√¨nh Trang Ch·ªß (Ho·∫∑c Qu·∫£n l√Ω chuy·∫øn t√†u)
        switchToCard("trangChu");

        // Thi·∫øt l·∫≠p s·ª± ki·ªán cho c√°c n√∫t menu
        initEventHandlers();
    }

    // =================================================================================
    // KHU V·ª∞C MENU (S·ª≠ d·ª•ng code c·ªßa b·∫°n)
    // =================================================================================

    /**
     * T·∫°o panel ƒëi·ªÅu h∆∞·ªõng b√™n tr√°i. (Code ƒë√£ s·ª≠a ƒë·ªÉ ƒëi·ªÅu h∆∞·ªõng qua CardLayout)
     */
    private JPanel createNavPanel() {
        JPanel panel = new JPanel();
        panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
        panel.setBackground(PRIMARY_COLOR);
        panel.setPreferredSize(new Dimension(200, 0));
        panel.setBorder(new EmptyBorder(10, 10, 10, 10));

        // --- Ph·∫ßn Header (Logo v√† ID) ---
        JPanel headerPanel = new JPanel();
        headerPanel.setLayout(new BoxLayout(headerPanel, BoxLayout.Y_AXIS));
        headerPanel.setBackground(PRIMARY_COLOR);
        headerPanel.setAlignmentX(Component.LEFT_ALIGNMENT);

        // ... (Logo v√† ID Label) ...
        JLabel logoLabel = new JLabel("GA XE");
        logoLabel.setFont(new Font("Segoe UI", Font.BOLD, 36));
        logoLabel.setForeground(Color.WHITE);
        logoLabel.setAlignmentX(Component.LEFT_ALIGNMENT);

        JLabel idLabel = new JLabel("ID: NV200001");
        idLabel.setFont(new Font("Segoe UI", Font.BOLD, 14));
        idLabel.setForeground(Color.WHITE);
        idLabel.setAlignmentX(Component.LEFT_ALIGNMENT);
        idLabel.setBorder(new EmptyBorder(5, 5, 20, 0));

        headerPanel.add(logoLabel);
        headerPanel.add(idLabel);
        headerPanel.setMaximumSize(headerPanel.getPreferredSize());
        panel.add(headerPanel);

        // --- Ph·∫ßn c√°c m·ª•c menu ---

        // [1. Trang ch·ªß]
        btnTrangChu = createNavItem("Trang ch·ªß", "\uD83C\uDFE0"); // üè†
        menuButtons.put("trangChu", btnTrangChu);
        panel.add(btnTrangChu);

        // [2. Tra c·ª©u h√≥a ƒë∆°n] - Gi·∫£ ƒë·ªãnh ƒë√¢y l√† m·ªôt Panel
        JButton btnTraCuu = createNavItem("Tra c·ª©u h√≥a ƒë∆°n", "\uD83D\uDD0D"); // üîç
        menuButtons.put("traCuuHD", btnTraCuu);
        panel.add(btnTraCuu);

        // [3. Qu·∫£n l√Ω chuy·∫øn t√†u] - M√†n h√¨nh hi·ªán t·∫°i
        btnQLChuyenTau = createNavItem("Qu·∫£n l√Ω chuy·∫øn t√†u", "\uD83D\uDE86"); // üöÜ
        btnQLChuyenTau.setBackground(SELECTED_COLOR); // M·∫∑c ƒë·ªãnh ch·ªçn m√†n h√¨nh n√†y
        menuButtons.put("qlChuyenTau", btnQLChuyenTau);
        panel.add(btnQLChuyenTau);

        // [4. Qu·∫£n l√Ω t√†i kho·∫£n NV]
        btnQLNV = createNavItem("Qu·∫£n l√Ω t√†i kho·∫£n NV", "\uD83D\uDC64"); // üë§
        menuButtons.put("qlNhanVien", btnQLNV);
        panel.add(btnQLNV);

        // [5. Qu·∫£n l√Ω gi√° v√©] - Gi·∫£ ƒë·ªãnh ƒë√¢y l√† m·ªôt Panel
        JButton btnQLGiaVe = createNavItem("Qu·∫£n l√Ω gi√° v√©", "\uD83D\uDCB2"); // üí≤
        menuButtons.put("qlGiaVe", btnQLGiaVe);
        panel.add(btnQLGiaVe);

        // [6. Qu·∫£n l√Ω khuy·∫øn m√£i]
        btnQLKhuyenMai = createNavItem("Qu·∫£n l√Ω khuy·∫øn m√£i", "\uD83C\uDFF7"); // üè∑Ô∏è
        menuButtons.put("qlKhuyenMai", btnQLKhuyenMai);
        panel.add(btnQLKhuyenMai);

        // [7. Th·ªëng k√™ b√°o c√°o]
        JButton btnThongKe = createNavItem("Th·ªëng k√™ b√°o c√°o", "\uD83D\uDCCA"); // üìä
        menuButtons.put("thongKe", btnThongKe);
        panel.add(btnThongKe);

        panel.add(Box.createVerticalGlue());

        // --- N√∫t ƒêƒÉng xu·∫•t ---
        btnDangXuat = createNavItem("ƒêƒÉng xu·∫•t", "\uD83D\uDEAA"); // üö™
        menuButtons.put("dangXuat", btnDangXuat);
        panel.add(btnDangXuat);

        return panel;
    }

    /**
     * Ph∆∞∆°ng th·ª©c t·∫°o n√∫t menu (ƒë∆∞·ª£c ƒë∆°n gi·∫£n h√≥a)
     */
    private JButton createNavItem(String text, String iconText) {
        JButton button = new JButton(text);

        // S·ª≠ d·ª•ng HTML cho icon v√† text
        String htmlText = "<html>" +
                "<span style='font-family:\"Segoe UI Emoji\"; font-size:15pt;'>" + iconText + "</span>" +
                "&nbsp;&nbsp;&nbsp;" +
                "<span style='font-family:\"Segoe UI\", Arial; font-size: 12pt; font-weight: bold;'>" + text + "</span>" +
                "</html>";
        button.setText(htmlText);

        button.setForeground(Color.WHITE);
        button.setBackground(PRIMARY_COLOR);
        button.setFocusPainted(false);
        button.setHorizontalAlignment(SwingConstants.LEFT);
        button.setBorder(new EmptyBorder(10, 25, 10, 25)); // ƒê·∫£m b·∫£o cƒÉn l·ªÅ tr√°i
        button.setOpaque(true);

        int fixedHeight = 50;
        Dimension itemSize = new Dimension(Integer.MAX_VALUE, fixedHeight);
        button.setMaximumSize(itemSize);

        // X·ª≠ l√Ω hi·ªáu ·ª©ng hover/m√†u s·∫Øc
        button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                if (button.getBackground().equals(PRIMARY_COLOR)) {
                    button.setBackground(HOVER_COLOR);
                }
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                if (button.getBackground().equals(HOVER_COLOR)) {
                    button.setBackground(PRIMARY_COLOR);
                }
            }
        });
        return button;
    }


    // =================================================================================
    // KHU V·ª∞C CONTENT PANEL & CARDLAYOUT
    // =================================================================================

    /**
     * Kh·ªüi t·∫°o Panel ch·ª©a CardLayout
     */
    private void initContentPanel() {
        cardLayout = new CardLayout();
        contentPanel = new JPanel(cardLayout);

        // Th√™m c√°c m√†n h√¨nh qu·∫£n l√Ω v√†o CardLayout
        // Gi·∫£ ƒë·ªãnh ManHinhDashboardQuanLy l√† m·ªôt JPanel
        contentPanel.add(new ManHinhDashboardQuanLy(), "trangChu"); // Placeholder cho Trang Ch·ªß
        contentPanel.add(new ManhinhQuanLyChuyenTau(), "qlChuyenTau");
        contentPanel.add(new ManHinhQuanLyNhanVien(), "qlNhanVien");
        contentPanel.add(new ManHinhQuanLyKhuyenMai(), "qlKhuyenMai");
        contentPanel.add(new JPanel(), "traCuuHD"); // Placeholder
        contentPanel.add(new JPanel(), "qlGiaVe"); // Placeholder
        contentPanel.add(new JPanel(), "thongKe"); // Placeholder


        add(contentPanel, BorderLayout.CENTER);
    }

    /**
     * Thi·∫øt l·∫≠p Action Listener cho t·∫•t c·∫£ c√°c n√∫t menu
     */
    private void initEventHandlers() {
        for (JButton button : menuButtons.values()) {
            button.addActionListener(this);
        }
    }

    /**
     * Chuy·ªÉn ƒë·ªïi m√†n h√¨nh trong CardLayout v√† highlight n√∫t menu t∆∞∆°ng ·ª©ng
     */
    public void switchToCard(String cardName) {
        cardLayout.show(contentPanel, cardName);
        highlightActiveButton(menuButtons.get(cardName));
    }

    /**
     * ƒê·ªïi m√†u n·ªÅn c·ªßa n√∫t menu ƒëang ƒë∆∞·ª£c ch·ªçn
     */
    private void highlightActiveButton(JButton active) {
        // ƒê·∫∑t t·∫•t c·∫£ c√°c n√∫t v·ªÅ m√†u ban ƒë·∫ßu
        for (JButton button : menuButtons.values()) {
            if (button != null) {
                button.setBackground(PRIMARY_COLOR);
            }
        }
        // Highlight n√∫t ƒëang ho·∫°t ƒë·ªông
        if (active != null) {
            active.setBackground(SELECTED_COLOR);
        }
    }

    // =================================================================================
    // X·ª¨ L√ù S·ª∞ KI·ªÜN CHUNG
    // =================================================================================
    @Override
    public void actionPerformed(ActionEvent e) {
        Object src = e.getSource();
        String cardName = null;

        if (src == btnTrangChu) {
            cardName = "trangChu";
        } else if (src == btnQLChuyenTau) {
            cardName = "qlChuyenTau";
        } else if (src == btnQLNV) {
            cardName = "qlNhanVien";
        } else if (src == btnQLKhuyenMai) {
            cardName = "qlKhuyenMai";
        } else if (src == btnDangXuat) {
            int confirm = JOptionPane.showConfirmDialog(this, "B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën ƒëƒÉng xu·∫•t?", "X√°c nh·∫≠n ƒëƒÉng xu·∫•t", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                // new ManHinhDangNhap().setVisible(true); // N·∫øu c√≥ m√†n h√¨nh ƒëƒÉng nh·∫≠p
                this.dispose();
            }
            return;
        } else {
            // X·ª≠ l√Ω c√°c n√∫t placeholder (Tra c·ª©u HD, QL Gi√° v√©, Th·ªëng k√™)
            for (Map.Entry<String, JButton> entry : menuButtons.entrySet()) {
                if (entry.getValue() == src) {
                    cardName = entry.getKey();
                    break;
                }
            }
        }

        if (cardName != null) {
            switchToCard(cardName);
        }
    }

    // =================================================================================
    // MAIN
    // =================================================================================
    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> {
            // ƒê·∫£m b·∫£o k·∫øt n·ªëi CSDL n·∫øu c·∫ßn cho c√°c Panel
            // ConnectDB.getInstance().connect();

            new QuanLyDashboard().setVisible(true);
        });
    }
}