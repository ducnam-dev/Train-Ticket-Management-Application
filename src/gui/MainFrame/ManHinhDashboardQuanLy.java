/*
 * @ (#) ManHinhDashboardQuanLy.java    1.0 10/20/2025
 *
 * Copyright (c) 2025 IUH. All rights reserved.
 */
package gui.MainFrame;

/*
 * @description
 *@author: Viet Hung
 *@date: 10/20/2025
 *@version:  1.0
 */

import gui.Panel.ManHinhQuanLyNhanVien;
import gui.Panel.ManhinhQuanLyChuyenTau;

import javax.swing.*;
import javax.swing.border.EmptyBorder;
import javax.swing.border.TitledBorder;
import javax.swing.table.DefaultTableModel;
import java.awt.*;

/**
 * L·ªõp n√†y t·∫°o giao di·ªán Dashboard (Trang ch·ªß) cho Qu·∫£n l√Ω.
 * ƒê√£ th√™m ƒë·∫ßy ƒë·ªß s·ª± ki·ªán ƒëi·ªÅu h∆∞·ªõng (navigation).
 */
public class ManHinhDashboardQuanLy extends JFrame {

    // =================================================================================
    // C√ÅC M√ÄU S·∫ÆC V√Ä FONT
    // =================================================================================
    private static final Color PRIMARY_COLOR = new Color(0, 120, 215);
    private static final Color SELECTED_COLOR = new Color(0, 51, 102);
    private static final Color BG_COLOR = new Color(245, 245, 245);

    // M√†u cho c√°c √¥ summary
    private static final Color COLOR_GREEN = new Color(46, 204, 113);
    private static final Color COLOR_YELLOW = new Color(241, 196, 15);
    private static final Color COLOR_ORANGE = new Color(230, 126, 34);
    private static final Color COLOR_BLUE_LIGHT = new Color(52, 152, 219); // M√†u m·ªõi cho KPI

    // Font ch·ªØ
    private static final Font FONT_BOLD_14 = new Font("Segoe UI", Font.BOLD, 14);
    private static final Font FONT_PLAIN_14 = new Font("Segoe UI", Font.PLAIN, 14);
    private static final Font FONT_TITLE = new Font("Segoe UI", Font.BOLD, 28);


    public ManHinhDashboardQuanLy() {
        setTitle("Trang ch·ªß / Dashboard");
        setSize(1600, 900);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
        setLayout(new BorderLayout());

        // 1. Panel ƒëi·ªÅu h∆∞·ªõng b√™n tr√°i
        JPanel navPanel = createNavPanel();
        add(navPanel, BorderLayout.WEST);

        // 2. Panel n·ªôi dung Dashboard
        JPanel dashboardContent = createDashboardContent();
        add(dashboardContent, BorderLayout.CENTER);
    }

    // =================================================================================
    // KHU V·ª∞C MENU B√äN TR√ÅI
    // =================================================================================

    /**
     * [ƒê√É C·∫¨P NH·∫¨T] T·∫°o panel ƒëi·ªÅu h∆∞·ªõng b√™n tr√°i.
     * M·ª•c "Trang ch·ªß" ƒë∆∞·ª£c ch·ªçn.
     * ƒê√£ th√™m ActionListeners ƒë·ªÉ ƒëi·ªÅu h∆∞·ªõng.
     */
    private JPanel createNavPanel() {
        JPanel panel = new JPanel();
        panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
        panel.setBackground(PRIMARY_COLOR);
        panel.setPreferredSize(new Dimension(260, 0));
        panel.setBorder(new EmptyBorder(10, 10, 10, 10));

        // --- Ph·∫ßn Header (Logo v√† ID) ---
        JPanel headerPanel = new JPanel();
        headerPanel.setLayout(new BoxLayout(headerPanel, BoxLayout.Y_AXIS));
        headerPanel.setBackground(PRIMARY_COLOR);
        headerPanel.setAlignmentX(Component.LEFT_ALIGNMENT);

        JLabel logoLabel = new JLabel("GA XE");
        logoLabel.setFont(new Font("Segoe UI", Font.BOLD, 36));
        logoLabel.setForeground(Color.WHITE);
        logoLabel.setAlignmentX(Component.LEFT_ALIGNMENT);

        JLabel idLabel = new JLabel("ID: NV200001");
        idLabel.setFont(new Font("Segoe UI", Font.BOLD, 14));
        idLabel.setForeground(Color.WHITE);
        idLabel.setAlignmentX(Component.LEFT_ALIGNMENT);
        idLabel.setBorder(new EmptyBorder(5, 5, 20, 0));

        headerPanel.add(logoLabel);
        headerPanel.add(idLabel);
        headerPanel.setMaximumSize(headerPanel.getPreferredSize());
        panel.add(headerPanel);

        // --- Ph·∫ßn c√°c m·ª•c menu ---

        // [1. Trang ch·ªß] - M√†n h√¨nh hi·ªán t·∫°i, kh√¥ng c·∫ßn s·ª± ki·ªán
        JButton selectedButton = createNavItem("Trang ch·ªß", "\uD83C\uDFE0"); // üè†
        selectedButton.setBackground(SELECTED_COLOR);
        for (java.awt.event.MouseListener ml : selectedButton.getMouseListeners()) {
            selectedButton.removeMouseListener(ml);
        }
        panel.add(selectedButton);

        // [2. Tra c·ª©u h√≥a ƒë∆°n]
        JButton btnTraCuu = createNavItem("Tra c·ª©u h√≥a ƒë∆°n", "\uD83D\uDD0D"); // üîç
        btnTraCuu.addActionListener(e -> {
            JOptionPane.showMessageDialog(this, "Ch·ª©c nƒÉng Tra c·ª©u h√≥a ƒë∆°n ƒëang ƒë∆∞·ª£c ph√°t tri·ªÉn.");
        });
        panel.add(btnTraCuu);

        // [3. Qu·∫£n l√Ω chuy·∫øn t√†u]
        JButton btnQLChuyenTau = createNavItem("Qu·∫£n l√Ω chuy·∫øn t√†u", "\uD83D\uDE86"); // üöÜ
        btnQLChuyenTau.addActionListener(e -> {
            new ManhinhQuanLyChuyenTau().setVisible(true);
            this.dispose(); // ƒê√≥ng m√†n h√¨nh hi·ªán t·∫°i
        });
        panel.add(btnQLChuyenTau);

        // [4. Qu·∫£n l√Ω t√†i kho·∫£n NV]
        JButton btnQLNV = createNavItem("Qu·∫£n l√Ω t√†i kho·∫£n NV", "\uD83D\uDC64"); // üë§
        btnQLNV.addActionListener(e -> {
            new ManHinhQuanLyNhanVien().setVisible(true);
            this.dispose(); // ƒê√≥ng m√†n h√¨nh hi·ªán t·∫°i
        });
        panel.add(btnQLNV);

        // [5. Qu·∫£n l√Ω gi√° v√©]
        JButton btnQLGiaVe = createNavItem("Qu·∫£n l√Ω gi√° v√©", "\uD88D\uDCB2"); // üí≤
        btnQLGiaVe.addActionListener(e -> {
            JOptionPane.showMessageDialog(this, "Ch·ª©c nƒÉng Qu·∫£n l√Ω gi√° v√© ƒëang ƒë∆∞·ª£c ph√°t tri·ªÉn.");
        });
        panel.add(btnQLGiaVe);

        // [6. Qu·∫£n l√Ω khuy·∫øn m√£i]
        JButton btnQLKhuyenMai = createNavItem("Qu·∫£n l√Ω khuy·∫øn m√£i", "\uD83C\uDFF7"); // üè∑Ô∏è
        btnQLKhuyenMai.addActionListener(e -> {
            JOptionPane.showMessageDialog(this, "Ch·ª©c nƒÉng Qu·∫£n l√Ω khuy·∫øn m√£i ƒëang ƒë∆∞·ª£c ph√°t tri·ªÉn.");
        });
        panel.add(btnQLKhuyenMai);

        // [7. Th·ªëng k√™ b√°o c√°o]
        JButton btnThongKe = createNavItem("Th·ªëng k√™ b√°o c√°o", "\uD83D\uDCCA"); // üìä
        btnThongKe.addActionListener(e -> {
            JOptionPane.showMessageDialog(this, "Ch·ª©c nƒÉng Th·ªëng k√™ b√°o c√°o ƒëang ƒë∆∞·ª£c ph√°t tri·ªÉn.");
        });
        panel.add(btnThongKe);

        panel.add(Box.createVerticalGlue());

        // --- Th√™m ƒë∆∞·ªùng k·∫ª ngang ---
        JSeparator separator = new JSeparator(SwingConstants.HORIZONTAL);
        separator.setForeground(new Color(255, 255, 255, 70));
        separator.setBackground(PRIMARY_COLOR);
        separator.setMaximumSize(new Dimension(Integer.MAX_VALUE, 1));
        panel.add(separator);
        panel.add(Box.createRigidArea(new Dimension(0, 5)));

        // --- N√∫t ƒêƒÉng xu·∫•t ---
        JButton btnDangXuat = createNavItem("ƒêƒÉng xu·∫•t", "\uD83D\uDEAA"); // üö™
        btnDangXuat.addActionListener(e -> {
            int confirm = JOptionPane.showConfirmDialog(this, "B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën ƒëƒÉng xu·∫•t?", "X√°c nh·∫≠n ƒëƒÉng xu·∫•t", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                // new ManHinhDangNhap().setVisible(true); // M·ªü l·∫°i m√†n h√¨nh ƒëƒÉng nh·∫≠p
                this.dispose();
            }
        });
        panel.add(btnDangXuat);

        return panel;
    }

    /**
     * [CHUNG] Ph∆∞∆°ng th·ª©c tr·ª£ gi√∫p ƒë·ªÉ t·∫°o m·ªôt n√∫t menu.
     */
    private JButton createNavItem(String text, String iconText) {
        JButton button = new JButton();

        String htmlText = "<html>" +
                "<span style='font-family:\"Segoe UI Emoji\"; font-size:15pt;'>" +
                iconText +
                "</span>" +
                "&nbsp;&nbsp;&nbsp;" +
                "<span style='font-family:\"Segoe UI\", Arial; font-size: 12pt; font-weight: bold;'>" +
                text.replace(" ", "&nbsp;") +
                "</span>" +
                "</html>";
        button.setText(htmlText);

        button.setForeground(Color.WHITE);
        button.setBackground(PRIMARY_COLOR);
        button.setFocusPainted(false);
        button.setHorizontalAlignment(SwingConstants.LEFT);
        button.setBorderPainted(false);
        button.setOpaque(true);
        button.setBorder(new EmptyBorder(10, 25, 10, 25));

        int fixedHeight = 50;
        Dimension itemSize = new Dimension(Integer.MAX_VALUE, fixedHeight);
        button.setMaximumSize(itemSize);
        button.setPreferredSize(new Dimension(260, fixedHeight));
        button.setMinimumSize(new Dimension(0, fixedHeight));

        final Color originalColor = PRIMARY_COLOR;
        final Color hoverColor = new Color(0, 130, 235); // S√°ng h∆°n m·ªôt ch√∫t

        button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                if (button.getBackground().equals(originalColor)) {
                    button.setBackground(hoverColor);
                }
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                if (button.getBackground().equals(hoverColor)) {
                    button.setBackground(originalColor);
                }
            }
        });
        return button;
    }

    // =================================================================================
    // KHU V·ª∞C N·ªòI DUNG (DASHBOARD)
    // =================================================================================

    /**
     * [M·ªöI] T·∫°o n·ªôi dung ch√≠nh cho Dashboard
     */
    private JPanel createDashboardContent() {
        JPanel panel = new JPanel(new BorderLayout(15, 15)); // Kho·∫£ng c√°ch gi·ªØa c√°c th√†nh ph·∫ßn
        panel.setBackground(BG_COLOR);
        panel.setBorder(new EmptyBorder(15, 15, 15, 15));

        // --- 1. Ti√™u ƒë·ªÅ ---
        JLabel lblTitle = new JLabel("Trang ch·ªß / Dashboard");
        lblTitle.setFont(FONT_TITLE);
        panel.add(lblTitle, BorderLayout.NORTH);

        // --- 2. Khu v·ª±c ch√≠nh (ch·ª©a KPI v√† Bi·ªÉu ƒë·ªì) ---
        JPanel mainArea = new JPanel(new BorderLayout(15, 15));
        mainArea.setOpaque(false);

        // 2.1. H√†ng KPI (4 √¥ t√≥m t·∫Øt)
        mainArea.add(createKpiPanel(), BorderLayout.NORTH);

        // 2.2. H√†ng Widget (Bi·ªÉu ƒë·ªì v√† B·∫£ng)
        mainArea.add(createMainWidgetsPanel(), BorderLayout.CENTER);

        panel.add(mainArea, BorderLayout.CENTER);
        return panel;
    }

    /**
     * [M·ªöI] T·∫°o 4 √¥ t√≥m t·∫Øt (KPI)
     */
    private JPanel createKpiPanel() {
        JPanel panel = new JPanel(new GridLayout(1, 4, 15, 15)); // L∆∞·ªõi 1x4
        panel.setOpaque(false);

        // TODO: C·∫≠p nh·∫≠t c√°c gi√° tr·ªã "0" n√†y t·ª´ database
        panel.add(createSummaryBox("Doanh thu h√¥m nay", "0 VNƒê", COLOR_GREEN));
        panel.add(createSummaryBox("V√© ƒë√£ b√°n", "0", COLOR_BLUE_LIGHT));
        panel.add(createSummaryBox("Chuy·∫øn t√†u h√¥m nay", "0", COLOR_ORANGE));
        panel.add(createSummaryBox("Nh√¢n vi√™n online", "0", COLOR_YELLOW));

        // ƒê·∫∑t chi·ªÅu cao c·ªë ƒë·ªãnh cho panel KPI
        panel.setMaximumSize(new Dimension(Integer.MAX_VALUE, 120));
        panel.setPreferredSize(new Dimension(0, 120));
        return panel;
    }

    /**
     * [CHUNG] Ph∆∞∆°ng th·ª©c tr·ª£ gi√∫p t·∫°o 1 √¥ t√≥m t·∫Øt (KPI box)
     */
    private JPanel createSummaryBox(String title, String value, Color bgColor) {
        JPanel box = new JPanel(new BorderLayout(0, 5));
        box.setBackground(bgColor);
        box.setBorder(new EmptyBorder(15, 20, 15, 20));

        JLabel lblTitle = new JLabel(title);
        lblTitle.setFont(FONT_BOLD_14);
        lblTitle.setForeground(Color.WHITE);

        JLabel lblValue = new JLabel(value);
        lblValue.setFont(new Font("Segoe UI", Font.BOLD, 36));
        lblValue.setForeground(Color.WHITE);

        box.add(lblTitle, BorderLayout.NORTH);
        box.add(lblValue, BorderLayout.CENTER);
        return box;
    }

    /**
     * [M·ªöI] T·∫°o panel ch·ª©a c√°c widget ch√≠nh (Bi·ªÉu ƒë·ªì v√† B·∫£ng)
     */
    private JPanel createMainWidgetsPanel() {
        JPanel panel = new JPanel(new GridLayout(1, 2, 15, 15)); // L∆∞·ªõi 1x2
        panel.setOpaque(false);

        panel.add(createRevenueChartPanel());
        panel.add(createUpcomingTrainsPanel());

        return panel;
    }

    /**
     * [M·ªöI] T·∫°o panel (gi·ªØ ch·ªó) cho bi·ªÉu ƒë·ªì doanh thu
     */
    private JPanel createRevenueChartPanel() {
        JPanel panel = new JPanel(new BorderLayout());
        panel.setBackground(Color.WHITE);
        panel.setBorder(BorderFactory.createTitledBorder(
                BorderFactory.createLineBorder(Color.LIGHT_GRAY),
                "Doanh thu 7 ng√†y qua",
                TitledBorder.LEFT, TitledBorder.TOP, FONT_BOLD_14, Color.BLACK
        ));

        // TODO: Th√™m th∆∞ vi·ªán bi·ªÉu ƒë·ªì (v√≠ d·ª•: JFreeChart) v√†o ƒë√¢y
        JLabel lblPlaceholder = new JLabel("Bi·ªÉu ƒë·ªì doanh thu s·∫Ω ƒë∆∞·ª£c hi·ªÉn th·ªã ·ªü ƒë√¢y");
        lblPlaceholder.setFont(FONT_PLAIN_14);
        lblPlaceholder.setHorizontalAlignment(SwingConstants.CENTER);
        lblPlaceholder.setForeground(Color.GRAY);
        panel.add(lblPlaceholder, BorderLayout.CENTER);

        return panel;
    }

    /**
     * [M·ªöI] T·∫°o panel cho b·∫£ng "Chuy·∫øn t√†u s·∫Øp kh·ªüi h√†nh"
     */
    private JPanel createUpcomingTrainsPanel() {
        JPanel panel = new JPanel(new BorderLayout());
        panel.setBackground(Color.WHITE);
        panel.setBorder(BorderFactory.createTitledBorder(
                BorderFactory.createLineBorder(Color.LIGHT_GRAY),
                "C√°c chuy·∫øn t√†u s·∫Øp kh·ªüi h√†nh",
                TitledBorder.LEFT, TitledBorder.TOP, FONT_BOLD_14, Color.BLACK
        ));

        String[] columnNames = {"M√£ t√†u", "Ga ƒëi", "Ga ƒë·∫øn", "Gi·ªù kh·ªüi h√†nh"};
        Object[][] data = {}; // D·ªØ li·ªáu tr·ªëng

        DefaultTableModel model = new DefaultTableModel(data, columnNames) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        JTable table = new JTable(model);
        table.setFont(FONT_PLAIN_14);
        table.setRowHeight(28);
        table.getTableHeader().setFont(FONT_BOLD_14);
        table.getTableHeader().setReorderingAllowed(false);

        JScrollPane scrollPane = new JScrollPane(table);
        panel.add(scrollPane, BorderLayout.CENTER);

        return panel;
    }

    /**
     * Ph∆∞∆°ng th·ª©c main ƒë·ªÉ ch·∫°y ·ª©ng d·ª•ng.
     */
    public static void main(String[] args) {
        try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (Exception e) {
            // D√πng giao di·ªán m·∫∑c ƒë·ªãnh
        }

        SwingUtilities.invokeLater(() -> {
            ManHinhDashboardQuanLy frame = new ManHinhDashboardQuanLy();
            frame.setVisible(true);
        });
    }
}